[{"title":"","url":"http://ginkwang.github.io/2018/12/20/《群英传》读书记 —— Android 控件/","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id: 20181220_qyz</span><br><span class=\"line\"></span><br><span class=\"line\">title: 《群英传》读书记 —— Android 控件</span><br><span class=\"line\"></span><br><span class=\"line\">date: 2018-12-20</span><br><span class=\"line\"></span><br><span class=\"line\">categories: Android</span><br><span class=\"line\"></span><br><span class=\"line\">tags:</span><br><span class=\"line\"></span><br><span class=\"line\">- Android</span><br><span class=\"line\">- 读书笔记</span><br><span class=\"line\">- 控件</span><br></pre></td></tr></table></figure>\n<h1 id=\"《群英传》读书记-——-Android-控件\"><a href=\"#《群英传》读书记-——-Android-控件\" class=\"headerlink\" title=\"《群英传》读书记 —— Android 控件\"></a>《群英传》读书记 —— Android 控件</h1><h3 id=\"控件架构\"><a href=\"#控件架构\" class=\"headerlink\" title=\"控件架构\"></a>控件架构</h3><p>Android 每个控件都会在界面中占据一块矩形区域，而在 Android 中，控件大致被分为两类 —— ViewGroup 和 View。</p>\n<p>ViewGroup 是 View 的父控件。</p>\n<h3 id=\"View-的测量\"><a href=\"#View-的测量\" class=\"headerlink\" title=\"View 的测量\"></a>View 的测量</h3><p>Android 在绘制 View 前，必须对 View 进行测量，即让系统知道要绘制一个多大的 View。</p>\n<p>这个过程在 onMeasure() 中执行。</p>\n<p>执行 View 测量的类是 —— Measure 类，测量模式分为以下三种：</p>\n<ul>\n<li><strong>EXACTLY</strong>：精确值模式</li>\n<li><strong>AT_MOST</strong>：最大值模式</li>\n<li><strong>UNSPECIFIDE</strong>：不指定 View 大小进行测量，View 想多大就多大，通常在绘制自定义 View 时使用。</li>\n</ul>\n<p>View 类默认的 onMeasure() 方法只支持 EXACTLY 模式。</p>\n<h3 id=\"View-的绘制\"><a href=\"#View-的绘制\" class=\"headerlink\" title=\"View 的绘制\"></a>View 的绘制</h3><p>绘制 View 要重写 onDraw() 方法，并使用系统提供的绘制 2D View 的 Canvas 对象。</p>\n<p>创建 Canvas 对象时要传入一个 bitmap 参数，使之与创建的 Canvas 画布紧密联系在一起，这一步称为“装载画布”。</p>\n<p>这个 bitmap 存储所有在 Canvas 上绘制的像素信息。</p>\n<h3 id=\"ViewGroup-的绘制\"><a href=\"#ViewGroup-的绘制\" class=\"headerlink\" title=\"ViewGroup 的绘制\"></a>ViewGroup 的绘制</h3><p>ViewGroup 会管理其子 View，其中就会管理其子 View 的大小。</p>\n<p>ViewGroup 在测量时会通过遍历所有子 View，从而调用子 View 的 Measure 方法来获取每个子 View 的测量结果。</p>\n<h3 id=\"ViewGroup-的绘制-1\"><a href=\"#ViewGroup-的绘制-1\" class=\"headerlink\" title=\"ViewGroup 的绘制\"></a>ViewGroup 的绘制</h3><p>ViewGroup 不需要绘制，但是 ViewGroup 会使用 dispatchDraw() 方法来绘制其子 View，其过程是通过遍历所有子 View，并调用子 View 的绘制方法完成绘制工作。</p>\n","categories":[],"tags":[]},{"title":"category","url":"http://ginkwang.github.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://ginkwang.github.io/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://ginkwang.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://ginkwang.github.io/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://ginkwang.github.io/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://ginkwang.github.io/tag/index.html","content":"","categories":[],"tags":[]}]